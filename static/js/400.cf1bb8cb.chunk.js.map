{"version":3,"file":"static/js/400.cf1bb8cb.chunk.js","mappings":"8PACA,EAA4B,0BAA5B,EAA6D,qBAA7D,EAAyF,qBAAzF,EAAsH,sBAAtH,EAAoJ,sBAApJ,EAAgL,oBAAhL,EAA4M,sBAA5M,EAA0O,sBAA1O,EAAuQ,qB,SCuEvQ,EAnEe,WAAO,IAAD,EACnB,GAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,UAAGJ,EAAaK,IAAI,gBAApB,QAAgC,GAE5CC,EAAY,mCAAG,WAAMC,GAAN,0EACnBA,EAAEC,iBACIC,EAAQF,EAAEG,OAAOD,MAAME,MAAMC,OAAOC,cAFvB,iDAInBZ,EAAgB,CAAEQ,MAAAA,IAJC,2CAAH,sDAqBlB,OAdAK,EAAAA,EAAAA,YAAU,WACR,GAAKV,EAAL,CACA,IAAMW,EAAW,mCAAG,8GAEOC,EAAAA,EAAAA,IAAgBZ,GAFvB,OAEVa,EAFU,OAGhBnB,EAAUmB,GAHM,gDAKhBC,QAAQC,MAAM,uOAAd,MALgB,yDAAH,qDASjBJ,GAVyB,CAW1B,GAAE,CAACX,KAGF,SAAC,EAAAgB,SAAD,WACE,iBAAKC,UAAWC,EAAhB,WACE,iBAAMC,SAAUjB,EAAhB,UACE,mBAAOe,UAAWC,EAAlB,WACE,kBAAOD,UAAWC,EAAYE,KAAK,OAAOC,KAAK,WAC/C,mBAAQJ,UAAWC,EAAnB,wBAIJ,eAAID,UAAWC,EAAf,SACGzB,GACCA,EAAO6B,KAAI,SAAAC,GACT,OACE,eAAIN,UAAWC,EAAf,UACE,UAAC,KAAD,CACED,UAAWC,EACXM,GAAE,kBAAaD,EAAIE,IACnBC,MAAO,CAAEC,KAAM7B,GAHjB,WAKE,cAAGmB,UAAWC,EAAd,SAA2BK,EAAIK,SAC/B,gBACEX,UAAWC,EACXW,IACEN,EAAIO,YAAJ,yCACsCP,EAAIO,aACtC,uDAENC,IAAKR,EAAIS,qBAdgBT,EAAIE,GAmBtC,UAKZ,C","sources":["webpack://react-homework-template/./src/pages/movies/movies.module.scss?f842","pages/movies/movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"movies_container__RBSXn\",\"list\":\"movies_list__t8Ote\",\"item\":\"movies_item__PolkG\",\"image\":\"movies_image__fjiz0\",\"input\":\"movies_input__AA+j3\",\"btn\":\"movies_btn__-gZOR\",\"label\":\"movies_label__U5CAk\",\"title\":\"movies_title__lEJLK\",\"link\":\"movies_link__zuE7x\"};","import { useState, useEffect, Suspense } from 'react';\nimport { requestMovieApi } from 'services/fetch';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport scss from './movies.module.scss';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const queryRequest = searchParams.get('query') ?? '';\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const query = e.target.query.value.trim().toLowerCase();\n    if (!query) return;\n    setSearchParams({ query });\n  };\n\n  useEffect(() => {\n    if (!queryRequest) return;\n    const fetchMovies = async () => {\n      try {\n        const response = await requestMovieApi(queryRequest);\n        setMovies(response);\n      } catch (error) {\n        console.error('Під час завантаження даних сталася помилка:', error);\n      }\n    };\n\n    fetchMovies();\n  }, [queryRequest]);\n\n  return (\n    <Suspense>\n      <div className={scss.container}>\n        <form onSubmit={handleSubmit}>\n          <label className={scss.label}>\n            <input className={scss.input} type=\"text\" name=\"query\" />\n            <button className={scss.btn}>SEND</button>\n          </label>\n        </form>\n\n        <ul className={scss.list}>\n          {movies &&\n            movies.map(mov => {\n              return (\n                <li className={scss.item} key={mov.id}>\n                  <Link\n                    className={scss.link}\n                    to={`/movies/${mov.id}`}\n                    state={{ from: location }}\n                  >\n                    <p className={scss.title}>{mov.title}</p>\n                    <img\n                      className={scss.image}\n                      src={\n                        mov.poster_path\n                          ? `https://image.tmdb.org/t/p/w500${mov.poster_path}`\n                          : 'https://fakeimg.pl/200x283?text=NOT+FOUND&font=bebas'\n                      }\n                      alt={mov.original_title}\n                    />\n                  </Link>\n                </li>\n              );\n            })}\n        </ul>\n      </div>\n    </Suspense>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","queryRequest","get","handleSubmit","e","preventDefault","query","target","value","trim","toLowerCase","useEffect","fetchMovies","requestMovieApi","response","console","error","Suspense","className","scss","onSubmit","type","name","map","mov","to","id","state","from","title","src","poster_path","alt","original_title"],"sourceRoot":""}